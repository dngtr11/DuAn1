/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.*;
import com.formdev.flatlaf.FlatLightLaf;
import java.util.List;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import Service.*;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class ViewSPCT extends javax.swing.JFrame {
    DefaultComboBoxModel<MauSac> molM = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Size> molS = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<ThuongHieu> molTH = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<ChatLieu> molCL = new DefaultComboBoxModel<>();
   DefaultTableModel modelSp = new DefaultTableModel();

    DefaultTableModel molSPCT = new DefaultTableModel();
    private final SanPhamChiTietService spctr = new SanPhamChiTietService();
    private final SanPhamService spr = new SanPhamService();
    private final MauSacService msr = new MauSacService();
    private final SizeService szr = new SizeService();
    private final ThuongHieuService thr = new ThuongHieuService();
    private final ChatLieuService clr = new ChatLieuService();
    private int idSP = 0;

    public ViewSPCT() {
        initComponents();
        setLocationRelativeTo(null);
        
        try {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(); // Tạo một DefaultComboBoxModel

        ArrayList<MauSac> listM = msr.getCbbMs();
        for (MauSac ms : listM) {
            model.addElement(ms.getTenMs()); // Thêm tên thương hiệu vào model, không phải thêm đối tượng ThuongHieu
        }

        cboMau.setModel(model); // Gán model cho combobox
//       
//            System.out.println(idSP);
//            System.out.println(list);
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi load dữ liệu thương hiệu: " + e.getMessage());
    }
        
        try {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(); // Tạo một DefaultComboBoxModel

        ArrayList<Size> listS = szr.getCbbSize();
        for (Size sz : listS) {
            model.addElement(sz.getTenS()); // Thêm tên thương hiệu vào model, không phải thêm đối tượng ThuongHieu
        }

        cboSZ.setModel(model); // Gán model cho combobox
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi load dữ liệu thương hiệu: " + e.getMessage());
    }
        
        
try {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(); // Tạo một DefaultComboBoxModel

        ArrayList<ChatLieu> listCL = clr.getCbbCl();
        for (ChatLieu cl : listCL) {
            model.addElement(cl.getTenCL()); // Thêm tên thương hiệu vào model, không phải thêm đối tượng ThuongHieu
        }

        cboCL.setModel(model); // Gán model cho combobox
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi load dữ liệu thương hiệu: " + e.getMessage());
    }
        
       try {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(); // Tạo một DefaultComboBoxModel

        ArrayList<ThuongHieu> listTH = thr.getCbbTh();
        for (ThuongHieu th : listTH) {
            model.addElement(th.getTenTH()); // Thêm tên thương hiệu vào model, không phải thêm đối tượng ThuongHieu
        }

        cboTH.setModel(model); // Gán model cho combobox
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi load dữ liệu thương hiệu: " + e.getMessage());
    }
        molSPCT = (DefaultTableModel) tblSPCT.getModel();
        showDataSanPhamChiTiet(spctr.getALLByIdSP(idSP));
        if(tblSPCT.getRowCount()>0){
            tblSPCT.setRowSelectionInterval(0, 0);
            showF();
        }
    }
    void showDataSanPham(List<SanPham> list) {
        int indexSp = 1;
        modelSp.setRowCount(0);
        for (SanPham sanPham : list) {
            modelSp.addRow(new Object[]{
                indexSp++,
                sanPham.getMaSp(),
                sanPham.getTenSp(),
                spr.getSoLuongByID(Integer.parseInt(sanPham.getId() + "")),
                sanPham.getId()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSua = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jComboBox15 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        jComboBox17 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cboMau = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        cboSZ = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        cboCL = new javax.swing.JComboBox<>();
        btnMau = new javax.swing.JButton();
        btnSz = new javax.swing.JButton();
        btnCL = new javax.swing.JButton();
        btnTH = new javax.swing.JButton();
        cboTH = new javax.swing.JComboBox<>();
        jComboBox25 = new javax.swing.JComboBox<>();
        jComboBox27 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSPCT = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        textField1 = new utils.TextField();
        txtMa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnNew.setText("Làm mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel9.setText("Tên sản phẩm:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel16.setText("#Chi tiết sản phẩm");

        jComboBox15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Màu sắc" }));
        jComboBox15.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBox15.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox15ItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel10.setText("Số lượng:");

        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chất liệu vải" }));
        jComboBox17.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBox17.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox17ItemStateChanged(evt);
            }
        });
        jComboBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox17ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thuộc tính", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 13))); // NOI18N

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel20.setText("Màu sắc:");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel21.setText("Kích thước:");

        cboMau.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel22.setText("Chất liệu vải:");

        cboSZ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel23.setText("Thương hiệu:");

        cboCL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        btnMau.setBackground(new java.awt.Color(150, 228, 255));
        btnMau.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnMau.setText("Xem");
        btnMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMauActionPerformed(evt);
            }
        });

        btnSz.setBackground(new java.awt.Color(150, 228, 255));
        btnSz.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnSz.setText("Xem");
        btnSz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSzActionPerformed(evt);
            }
        });

        btnCL.setBackground(new java.awt.Color(150, 228, 255));
        btnCL.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnCL.setText("Xem");
        btnCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLActionPerformed(evt);
            }
        });

        btnTH.setBackground(new java.awt.Color(150, 228, 255));
        btnTH.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnTH.setText("Xem");
        btnTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHActionPerformed(evt);
            }
        });

        cboTH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboTH, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboCL, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboSZ, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSz, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboMau, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnMau, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMau, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMau))
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSZ, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSz))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboCL, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCL))
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTH)
                    .addComponent(cboTH, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jComboBox25.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thương hiệu" }));
        jComboBox25.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBox25.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox25ItemStateChanged(evt);
            }
        });
        jComboBox25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox25ActionPerformed(evt);
            }
        });

        jComboBox27.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kích thước" }));
        jComboBox27.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBox27.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox27ItemStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel7.setText("Mã sản phẩm:");

        tblSPCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã SPCT", "Tên SP", "Màu sắc", "Kích thước", "Chất liệu vải", "Thương hiệu", "Giá bán", "Số lượng"
            }
        ));
        tblSPCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSPCTMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSPCT);

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel8.setText("Giá bán:");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel25.setText("Sảm phẩm chi tiết");

        textField1.setLabelText("Tìm kiếm");
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(949, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTen, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGia, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSL, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMa))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(223, 223, 223))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox15, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(84, 84, 84)
                                        .addComponent(jComboBox27, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(jComboBox17, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(jComboBox25, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox17, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox25, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox27, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        try {
            if (JOptionPane.showConfirmDialog(this, "Bạn có muốn Sửa không ?") == 0) {
                SanPhamChiTiet spct = new SanPhamChiTiet();
                spct = spctr.getALL().get(tblSPCT.getSelectedRow());
                JOptionPane.showMessageDialog(this, spctr.updateEntity(getF(), spct.getId()));
                showDataSanPham(spr.getALL());
                showDataSanPhamChiTiet(spctr.getALL());
//                tenSp();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng để sửa");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnNewActionPerformed

    private void jComboBox15ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox15ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox15ItemStateChanged

    private void jComboBox17ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox17ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox17ItemStateChanged

    private void jComboBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox17ActionPerformed

    private void jComboBox25ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox25ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox25ItemStateChanged

    private void jComboBox25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox25ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox25ActionPerformed

    private void jComboBox27ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox27ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox27ItemStateChanged

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
 try {
        // Kiểm tra các trường không được để trống
        if (txtMa.getText().isEmpty() || txtTen.getText().isEmpty() || txtGia.getText().isEmpty() || txtSL.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được để trống");
            return;
        }
        
        // Kiểm tra xem mã sản phẩm đã tồn tại hay chưa
        if (checkT(txtMa.getText())) {
            JOptionPane.showMessageDialog(this, "Mã đã tồn tại");
            return;
        }

        // Lấy giá và số lượng từ các trường văn bản
        float gia = 0;
        int soLuong = 0;
        try {
            gia = Float.parseFloat(txtGia.getText());
            soLuong = Integer.parseInt(txtSL.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Giá hoặc số lượng không hợp lệ");
            return;
        }

        // Kiểm tra giá và số lượng không được âm
        if (gia < 0 || soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Giá và số lượng không được âm");
            return;
        }

        // Tạo một đối tượng SanPhamChiTiet từ dữ liệu nhập vào từ giao diện
        SanPhamChiTiet sp = getF();
        sp.setIdSp(idSP);
        sp.setTrangThai(true);
        System.out.println("==========================");
        System.out.println(idSP);
        System.out.println("==========================");
//        int index = tblSPCT.getSelectedRow();
//        sp.setIdSp();

        // Thêm đối tượng SanPhamChiTiet vào cơ sở dữ liệu
        String result = spctr.addEntity(sp);
        if (result.equals("Thêm thành công")) {
            JOptionPane.showMessageDialog(this, result);
            showDataSanPhamChiTiet(spctr.getALLByIdSP(idSP));
        } else {
            JOptionPane.showMessageDialog(this, result);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
    }   
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSzActionPerformed
        // TODO add your handling code here:
        new ViewKichThuoc().setVisible(true);
    }//GEN-LAST:event_btnSzActionPerformed

    private void btnMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMauActionPerformed
        // TODO add your handling code here:
        new ViewMauSac().setVisible(true);
    }//GEN-LAST:event_btnMauActionPerformed

    private void btnCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLActionPerformed
        // TODO add your handling code here:
        new ViewChatvai().setVisible(true);
    }//GEN-LAST:event_btnCLActionPerformed

    private void btnTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHActionPerformed
        // TODO add your handling code here:
        new ViewThuongHieu().setVisible(true);
    }//GEN-LAST:event_btnTHActionPerformed

    private void tblSPCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSPCTMouseClicked
        // TODO add your handling code here:
         try {
            showF();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi load form");
        }
    }//GEN-LAST:event_tblSPCTMouseClicked

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
       try {
        String searchKeyword = textField1.getText(); // Lấy từ khóa tìm kiếm từ JTextField

        // Gọi phương thức search với từ khóa tìm kiếm
        List<SanPhamChiTiet> searchResult = spctr.searchSpct(searchKeyword);

        // Hiển thị kết quả tìm kiếm trong bảng hoặc panel của bạn
           System.out.println(searchResult);
        if (!searchResult.isEmpty()) {
            // Hiển thị kết quả trong bảng hoặc panel của bạn
            DefaultTableModel model = (DefaultTableModel) tblSPCT.getModel();
            model.setRowCount(0); // Xóa tất cả các hàng hiện có trong bảng

            for (SanPhamChiTiet spct : searchResult) {
                String tenSp = spr.getbyID(spct.getIdSp()).getTenSp();
                String tenMs = msr.getbyID(spct.getIdMs()).getTenMs();
                String tenCl = clr.getbyID(spct.getIdCl()).getTenCL();
                String tenSize = szr.getbyID(spct.getIdSize()).getTenS();
                String tenThuongHieu = thr.getbyID(spct.getIdThuongHieu()).getTenTH();
                String maSP= spr.getbyID(spct.getIdSp()).getMaSp();
                model.addRow(new Object[]{
                    spct.getId(),
                    maSP,
                    tenSp,
                    tenMs,
                    tenCl,
                    tenSize,
                    tenThuongHieu,
                    spct.getGia(),
                    spct.getSoLuong()
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm nào.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_textField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewSPCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewSPCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewSPCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewSPCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new FlatLightLaf());
                } catch (UnsupportedLookAndFeelException ex) {
//            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
                new ViewSPCT().setVisible(true);
            }
        });
    }

     void showDataSanPhamChiTiet(List<SanPhamChiTiet> list) {
        molSPCT.setRowCount(0);
        for (SanPhamChiTiet spct : list) {
            String tenSp = spr.getbyID(spct.getIdSp()).getTenSp();
            String tenMs = msr.getbyID(spct.getIdMs()).getTenMs();
            String tenCl = clr.getbyID(spct.getIdCl()).getTenCL();
            String tenSize = szr.getbyID(spct.getIdSize()).getTenS();
            String tenThuongHieu = thr.getbyID(spct.getIdThuongHieu()).getTenTH();
            String maSP= spr.getbyID(spct.getIdSp()).getMaSp();
            System.out.println(list.size());
            molSPCT.addRow(new Object[]{
                spct.getId(),
                maSP,
                tenSp,
                tenMs,
                tenCl,
                tenSize,
                tenThuongHieu,
                spct.getGia(),
                spct.getSoLuong()
            });
        }
    }

  private void showF() {
    int index = tblSPCT.getSelectedRow();
    txtMa.setText(getValueAsString(tblSPCT.getValueAt(index, 1)));
    txtTen.setText(getValueAsString(tblSPCT.getValueAt(index, 2)));
    String mauSac = getValueAsString(tblSPCT.getValueAt(index, 3)); // Chuyển đổi giá trị thành chuỗi
    molM.setSelectedItem(mauSac); // Thêm chuỗi vào combobox màu sắc
    String size = getValueAsString(tblSPCT.getValueAt(index, 4)); // Chuyển đổi giá trị thành chuỗi
    molS.setSelectedItem(size); // Thêm chuỗi vào combobox kích thước
    String chatLieu = getValueAsString(tblSPCT.getValueAt(index, 5)); // Chuyển đổi giá trị thành chuỗi
    molCL.setSelectedItem(chatLieu); // Thêm chuỗi vào combobox chất liệu
    String thuongHieu = getValueAsString(tblSPCT.getValueAt(index, 6)); // Chuyển đổi giá trị thành chuỗi
    molTH.setSelectedItem(thuongHieu); // Thêm chuỗi vào combobox thương hiệu
    txtGia.setText(getValueAsString(tblSPCT.getValueAt(index, 7)));
    txtSL.setText(getValueAsString(tblSPCT.getValueAt(index, 8)));
}

// Phương thức này trả về giá trị dạng chuỗi nếu giá trị không phải là null, ngược lại trả về chuỗi rỗng
private String getValueAsString(Object value) {
    return value != null ? value.toString() : "";
}
public void setSanPhamDetails(SanPhamChiTiet spct,int idSP,String maSP, String tenSp, String tenMs, String tenCl, String tenSize, String tenThuongHieu) {
    if (spct != null) {
        txtMa.setText(maSP);  // Mã sản phẩm chi tiết
        txtTen.setText(tenSp);             // Tên sản phẩm
        cboMau.setSelectedItem(tenMs);     // Màu sắc
        cboCL.setSelectedItem(tenCl);      // Chất liệu
        cboSZ.setSelectedItem(tenSize);    // Kích thước
        cboTH.setSelectedItem(tenThuongHieu);  // Thương hiệu
        txtGia.setText(String.valueOf(spct.getGia())); // Giá
        txtSL.setText(String.valueOf(spct.getSoLuong())); // Số lượng
        this.idSP = idSP;
         List<SanPhamChiTiet> list = spctr.getALLByIdSP(idSP);
        showDataSanPhamChiTiet(list);
    } else {
        // Xử lý trường hợp spct là null
        JOptionPane.showMessageDialog(this, "Không có thông tin chi tiết sản phẩm.");
    }
}
    private void clear() {
        txtMa.setText("");
        txtTen.setText("");
        cboCL.setSelectedItem(null);
        cboMau.setSelectedItem(null);
        cboSZ.setSelectedItem(null);
        cboTH.setSelectedItem(null);
        txtGia.setText("");
        txtSL.setText("");
        

    }

    private boolean checkT(String ma) {
        for (int i = 0; i < tblSPCT.getRowCount() - 1; i++) {
            if (tblSPCT.getValueAt(i, 1).toString().equals(ma)) {
                return true;
            }
        }
        return false;
    }
  private SanPhamChiTiet getF() {
    SanPhamChiTiet sp = new SanPhamChiTiet();
   

    // Lấy và thiết lập các ID từ các đối tượng đã chọn từ combobox
    MauSac selectedMauSac = msr.getbyName(cboMau.getSelectedItem().toString());
    if (selectedMauSac != null) {
        sp.setIdMs(selectedMauSac.getId());
    }

    ChatLieu selectedChatLieu = clr.getbyName(cboCL.getSelectedItem().toString());
    if (selectedChatLieu != null) {
        sp.setIdCl(selectedChatLieu.getId());
    }

    Size selectedSize = szr.getbyName(cboSZ.getSelectedItem().toString());
    if (selectedSize != null) {
        sp.setIdSize(selectedSize.getId());
    }

    ThuongHieu selectedThuongHieu = thr.getbyName(cboTH.getSelectedItem().toString());
    if (selectedThuongHieu != null) {
        sp.setIdThuongHieu(selectedThuongHieu.getId());
    }

    // Lấy và thiết lập giá và số lượng từ các trường văn bản
    try {
        float gia = Float.parseFloat(txtGia.getText());
        sp.setGia(gia);
    } catch (NumberFormatException e) {
        // Xử lý nếu giá không hợp lệ
        sp.setGia(0); // Thiết lập giá là 0 nếu không thể chuyển đổi
    }

    try {
        int soLuong = Integer.parseInt(txtSL.getText());
        sp.setSoLuong(soLuong);
    } catch (NumberFormatException e) {
        // Xử lý nếu số lượng không hợp lệ
        sp.setSoLuong(0); // Thiết lập số lượng là 0 nếu không thể chuyển đổi
    }

    return sp;
}
//void tenSp() {
//        cbbTenSanPham.removeAllItems();
//        for (SanPham sp : serviceSp.getTenSp()) {
//            cbbModelSp.addElement(sp);
//        }
//    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCL;
    private javax.swing.JButton btnMau;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSz;
    private javax.swing.JButton btnTH;
    private javax.swing.JButton btnThem;
    private javax.swing.JComboBox<String> cboCL;
    private javax.swing.JComboBox<String> cboMau;
    private javax.swing.JComboBox<String> cboSZ;
    private javax.swing.JComboBox<String> cboTH;
    private javax.swing.JComboBox<String> jComboBox15;
    private javax.swing.JComboBox<String> jComboBox17;
    private javax.swing.JComboBox<String> jComboBox25;
    private javax.swing.JComboBox<String> jComboBox27;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblSPCT;
    private utils.TextField textField1;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
